scalar Datetime

type Query {
    users(id: Int = null, name: String = null): [User]!

    departments(id: Int = null, name: String = null): [Department]!

    employees(id: Int = null, name: String = null, hiredOn: Datetime = null): [Employee]!
}

type Mutation {
    createUser(input: UserInput!): User

    updateUser(id: Int!, input: UserInput!): User

    deleteUser(id: Int!): Boolean!

    createEmployee(input: EmployeeInput!): Employee

    updateEmployee(id: Int!, input: EmployeeInput!): Employee

    deleteEmployee(id: Int!): Boolean!
}

type User {
    id: Int!
    name: String!
    lastName: String!
    created_at: Datetime!
    updated_at: Datetime!
}

input UserInput {
    name: String!
    lastName: String!
}

type Department {
    id: Int!
    name: String!
    place: String
    manager: String
    created_at: Datetime!
    updated_at: Datetime!
}

type Employee {
    id: Int!
    name: String!
    department: Department!
    hiredOn: Datetime
    role: String
    residence: String
    created_at: Datetime!
    updated_at: Datetime!
}

input EmployeeInput {
    name: String!
    departmentId: Int!
    hiredOn: Datetime
    role: String
    residence: String
}
